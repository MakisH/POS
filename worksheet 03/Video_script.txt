Useful information can be found here: 
https://software.intel.com/en-us/blogs/2014/08/06/one-sided-communication describes one-sided communication


3.2 Required Video Commentary:

1. Cannon's algorithm:

Cannon's algorithm is an algorithm for matrix-matrix multiplication that is well-posed for implementations in distributed memory systems. The algorithm is based on a Cartesian grid, where both parts of the input and output matrices reside. The grid size is determined by the number of processes and after partitioning one block is given to each process. The core idea of the algorithm  is the rotational exchange of blocks from the input matrices. All matrices are divided in the same number of parts and distributed equally to all processes. The processes compute the partial solutions of the multiplication locally and rotate their input matrix parts with neighbors vertically and horizontally. After a number of algorithm steps that equals the square root of the total of processes, each local part of the solution matrix is completed.

5.2 Required Video Commentary: 

1. Which one-sided operations were used? 

The one-sided operations MPI_Get() and MPI_Put() were used. MPI_Put() puts data into a memory window on a remote process. MPI_Get() gets data from a memory window on a remote process. Together, these operations combined replace the calls to MPI_Sendrecv_replace() which sends and receives using a single buffer.  
